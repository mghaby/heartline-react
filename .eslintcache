[{"/Users/marcnguyen/Documents/heartline-react/src/components/Home.js":"1","/Users/marcnguyen/Documents/heartline-react/src/components/BMI.js":"2","/Users/marcnguyen/Documents/heartline-react/src/App.js":"3","/Users/marcnguyen/Documents/heartline-react/src/components/Settings.js":"4","/Users/marcnguyen/Documents/heartline-react/src/components/SignUp.js":"5","/Users/marcnguyen/Documents/heartline-react/src/components/Slider.js":"6","/Users/marcnguyen/Documents/heartline-react/src/components/Button_Form.js":"7","/Users/marcnguyen/Documents/heartline-react/src/components/WeightLog.js":"8","/Users/marcnguyen/Documents/heartline-react/src/components/SignIn.js":"9","/Users/marcnguyen/Documents/heartline-react/src/components/Progess.js":"10","/Users/marcnguyen/Documents/heartline-react/src/config/api.js":"11","/Users/marcnguyen/Documents/heartline-react/src/utils/stateReducer.js":"12"},{"size":4148,"mtime":1613048718137,"results":"13","hashOfConfig":"14"},{"size":1686,"mtime":1613033791645,"results":"15","hashOfConfig":"14"},{"size":2292,"mtime":1613047089387,"results":"16","hashOfConfig":"14"},{"size":4672,"mtime":1613036261700,"results":"17","hashOfConfig":"14"},{"size":5904,"mtime":1613039883740,"results":"18","hashOfConfig":"14"},{"size":1981,"mtime":1613045843171,"results":"19","hashOfConfig":"14"},{"size":2880,"mtime":1613047243476,"results":"20","hashOfConfig":"14"},{"size":4846,"mtime":1613028222685,"results":"21","hashOfConfig":"14"},{"size":2325,"mtime":1613041983610,"results":"22","hashOfConfig":"14"},{"size":310,"mtime":1613003003697,"results":"23","hashOfConfig":"14"},{"size":333,"mtime":1612921992743,"results":"24","hashOfConfig":"14"},{"size":1752,"mtime":1612929129743,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"gd4lcx",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/marcnguyen/Documents/heartline-react/src/components/Home.js",["57","58","59"],"import React, {useEffect, useState} from 'react';\nimport BMI from './BMI'\nimport Progress from './Progess'\nimport FormDialog from './Button_Form'\nimport Grid from '@material-ui/core/Grid';\nimport {updateUser} from '../services/userServices'\nimport {useGlobalState} from '../utils/stateContext'\nimport WeightLog from './WeightLog';\n\nfunction Home() {\n\tconst initialUserState = {\n\t\tusername: '',\n\t\tpassword: '',\n\t\tpassword_confirmation: '',\n\t\tweight: 65,\n\t\theight: 175,\n\t\tage: 30,    \n\t\tmf: 5,\n\t\tactivity_level: 1.2,\n\t\tgoal_weight: 65,\n\t\twater: 2000,   \n\t\tpublic: false,\n\t\tcalories: 0,\n\t\twater_count: 0\n\t  }\n\n\tconst {store, dispatch} = useGlobalState()\n\tconst {user} = store\n\tconst [homeUser, setHomeUser] = useState(initialUserState)\n\n\tuseEffect(()=>{\n\t\tsetHomeUser(user)\n\t\t  }, [user])\n\n\tconst [calculateCalories, setCalculateCalories] = useState('')\n\tconst [totalCalories, setTotalCalories] = useState('')\n\n\tuseEffect(()=>{\n\t\tsetCalculateCalories(((10*(homeUser.weight) + 6.25*(homeUser.height) - 5*(homeUser.age) + homeUser.mf) * homeUser.activity_level))\n\t}, [homeUser.weight, homeUser.height, homeUser.age, homeUser.mf, homeUser.activity_level])\n\n\tuseEffect(()=>{\n\t\tif (homeUser.goal_weight === homeUser.weight){\n\t\t\tsetTotalCalories(Math.floor(calculateCalories))\n\t\t} else {\n\t\t(homeUser.goal_weight>homeUser.weight) ? setTotalCalories(Math.floor(calculateCalories*1.13)) : setTotalCalories(Math.floor(calculateCalories*0.87))\n\t\t}\n\t}, [calculateCalories])\n\n\tuseEffect(() => {\n\t\tupdateUser( {id: homeUser.id, ...homeUser})\n\t\t.then((data) => {\n\t\t  dispatch({type: 'setUser', data: data})\n\t\t})\n\t}, [homeUser.calories, homeUser.water_count, homeUser.weight])\n\t\n\tconst health = [\n\t\t{SevereThinness: '<16'},\n\t\t{ModerateThinness: '16 - 17'},\n\t\t{MildThinness: '17 - 18.5'},\n\t\t{Normal: '18.5 - 25'},\n\t\t{Overweight: '25 - 30'},\n\t\t{ObeseClassI: '30 - 35'},\n\t\t{ObeseClassII: '35 - 40'},\n\t\t{ObeseClassIII: '>40'}\n\t]\n\n\tfunction addCalories(calories){\n\t\tdispatch({type: 'addCalories', data: calories})\n\t}\n\n\tfunction subtractCalories(calories){\n\t\tdispatch({type: 'subtractCalories', data: calories})\n\t}\n\tfunction addWater(water){\n\t\tdispatch({type: 'addWater', data: water})\n\t}\n\tfunction subtractWater(water){\n\t\tdispatch({type: 'subtractWater', data: water})\n\t}\n\tfunction updateWeight(weight){\n\t\tdispatch({type: 'updateWeight', data: weight})\n\t}\n\n    return (\n      \t<div>\n\t\t\t<Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n\t\t\t\t<Grid item xs={6} sm={3}>\n\t\t\t\t\t<div style={{width:200}}><Progress value={homeUser.calories} total={totalCalories}/></div>\n\t\t\t\t\t<FormDialog\n\t\t\t\t\ticon={'+'}\n\t\t\t\t\toperator={addCalories} \n\t\t\t\t\tmax={totalCalories} \n\t\t\t\t\tmin={1} \n\t\t\t\t\ttitle={'Calories'} \n\t\t\t\t\tmessage={'Please log a value to increment your calories'}\n\t\t\t\t\tinitialValue={250} \n\t\t\t\t\t/> \n\n\t\t\t\t\t<FormDialog \n\t\t\t\t\ticon={'-'} \n\t\t\t\t\toperator={subtractCalories} \n\t\t\t\t\tmax={totalCalories} \n\t\t\t\t\tmin={1} \n\t\t\t\t\ttitle={'Calories'} \n\t\t\t\t\tmessage={'Please log a value to decrement your calories'}\n\t\t\t\t\tinitialValue={250}\n\t\t\t\t\t/>\n\t\t\t\t\t<p>{`${homeUser.calories} / ${totalCalories}`}</p>\n\t\t\t\t</Grid>\n\n\t\t\n\t\t\t\t<Grid item xs={6} sm={3}>\n\t\t\t\t\t<div style={{width:200}}><Progress value={homeUser.water_count} total={homeUser.water} /></div>\n\n\t\t\t\t\t<FormDialog\n\t\t\t\t\ticon={'+'} \n\t\t\t\t\toperator={addWater} \n\t\t\t\t\tmax={homeUser.water} \n\t\t\t\t\tmin={1} \n\t\t\t\t\ttitle={'Water'} \n\t\t\t\t\tmessage={'Please log a value to increment your water consumption'}\n\t\t\t\t\tinitialValue={250}\n\t\t\t\t\t/> \n\n\t\t\t\t\t<FormDialog \n\t\t\t\t\ticon={'-'} \n\t\t\t\t\toperator={subtractWater} \n\t\t\t\t\tmax={homeUser.water} \n\t\t\t\t\tmin={1} \n\t\t\t\t\ttitle={'Calories'} \n\t\t\t\t\tmessage={'Please log a value to decrement your water consumption'}\n\t\t\t\t\tinitialValue={250}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<p>{`${homeUser.water_count} / ${homeUser.water} mL`}</p>\n\n\t\t\t\t</Grid>\n\t\t\t\t\t\n\t\t\t\t<Grid item xs={6} sm={3}>\n\t\t\t\t\t<BMI />\n\n\t\t\t\t\t<p>{homeUser.weight}kg</p>\n\n\t\t\t\t\t<FormDialog\n\t\t\t\t\ticon={'+'} \n\t\t\t\t\toperator={updateWeight} \n\t\t\t\t\tmax={450} \n\t\t\t\t\tmin={1} \n\t\t\t\t\ttitle={'Current weight'} \n\t\t\t\t\tmessage={'Please log in your weight'} \n\t\t\t\t\tinitialValue={homeUser.weight}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<WeightLog />\n    \t</div>\n    );\n  }\n  \n  \n  export default Home;\n  ","/Users/marcnguyen/Documents/heartline-react/src/components/BMI.js",[],"/Users/marcnguyen/Documents/heartline-react/src/App.js",["60"],"import React, { useEffect, useReducer } from 'react'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport Nav from './components/Nav';\nimport Landing from './components/Landing';\nimport SignIn from './components/SignIn';\nimport SignUp from './components/SignUp';\nimport Index from './components/Home';\nimport Settings from './components/Settings';\nimport NotFound from './components/NotFound';\nimport {StateContext} from './utils/stateContext';\nimport reducer from './utils/stateReducer';\nimport {getUser, getRandom} from './services/userServices';\n\nfunction App() {\n\n  const initialState = {\n    user: sessionStorage.getItem('user') || {\n      username: '',\n      password: '',\n      password_confirmation: '',\n      weight: 65,\n      height: 175,\n      age: 30,    \n      mf: 5,\n      activity_level: 1.2,\n      goal_weight: 65,\n      water: 2000,   \n      public: false,\n      calories: 0,\n      water_count: 0\n      },\n    loggedInUser: sessionStorage.getItem('id') || null,\n\t\tauth: {token:sessionStorage.getItem('token') || null},\n    random: sessionStorage.getItem('random') || null\n  }\n\n  const [store, dispatch] = useReducer(reducer, initialState)\n  const {user, loggedInUser} = store\n\n  useEffect(() => {\n\t\tgetUser(loggedInUser)\n\t\t.then((data) => {\n      sessionStorage.setItem('user', data)\n      dispatch({type: 'setUser', data: data})\n      console.log('app.getUser.data: ', data)\n    })\n\t\t.catch((error) => console.log(error));\n    console.log('app.get.user: ', user)\n    console.log('app.get.loggedInUser: ', loggedInUser)\n  },[loggedInUser])\n\n  useEffect(() => {\n    getRandom()\n    .then((data) => {\n    sessionStorage.setItem('random', data[0])\n    dispatch({type: 'addRandom', data: data[0]})\n    })\n    .catch((error) => console.log(error))\n  },[])\n  \n  return (\n    <StateContext.Provider value={{store, dispatch}}>\n      <Router>\n\t\t\t<Nav />\n\t\t\t<Switch>\n        <Route exact path=\"/\" component={Landing} />\n        <Route path=\"/SignIn\" component={SignIn} /> \n        <Route path=\"/SignUp\" component={SignUp} />\n        <Route path=\"/Index\" component={Index} />\n        <Route path='/Settings' component={Settings} />\n        <Route component={NotFound} />\n\t\t\t</Switch>\n\t  </Router>\n    </StateContext.Provider>\n    \n  );\n}\n\n\nexport default App;\n","/Users/marcnguyen/Documents/heartline-react/src/components/Settings.js",[],["61","62"],"/Users/marcnguyen/Documents/heartline-react/src/components/SignUp.js",[],["63","64"],"/Users/marcnguyen/Documents/heartline-react/src/components/Slider.js",["65"],"import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Input from '@material-ui/core/Input';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 250,\n  },\n  input: {\n    width: 70,\n  },\n});\n\nexport default function InputSlider({initialValue, handleGraphics, name, label, max, min}) {\n  const classes = useStyles();\n  const [value, setValue] = useState(initialValue);\n\n  // useEffect(()=>{handleGraphics({name}, value)},[value])\n\n  const handleSliderChange = (event, newValue) => {\n    setValue(newValue);\n    {handleGraphics({name}, value)}\n  };\n\n\n  const handleInputChange = (event) => {\n    setValue(event.target.value === '' ? '' : Number(event.target.value));\n    handleGraphics({name}, value)\n  };\n\n  const handleBlur = () => {\n    if (value < min) {\n      setValue(min);\n    } else if (value > max) {\n      setValue(max);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Typography id=\"input-slider\" gutterBottom>\n        {label}\n      </Typography>\n      <Grid container spacing={2} alignItems=\"center\">\n        <Grid item xs>\n          <Slider\n            value={typeof value === 'number' ? value : 0}\n            onChange={handleSliderChange}\n            aria-labelledby=\"input-slider\"\n            min={min}\n            max={max}\n            name={name}\n          />\n        </Grid>\n        <Grid item>\n          <Input\n            className={classes.input}\n            value={value}\n            margin=\"dense\"\n            onChange={handleInputChange}\n            onBlur={handleBlur}\n            name={name}\n            inputProps={{\n              step: 1,\n              min: {min},\n              max: {max},\n              type: 'number',\n              'aria-labelledby': 'input-slider',\n            }}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/Users/marcnguyen/Documents/heartline-react/src/components/Button_Form.js",["66"],"/Users/marcnguyen/Documents/heartline-react/src/components/WeightLog.js",["67","68"],"import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport {useGlobalState} from '../utils/stateContext'\n// import {getRandom} from '../services/userServices'\n\n// make all text in here black/grey\n\n\nwindow.onload = function() {\n    if(!window.location.hash) {\n        window.location = window.location + '#loaded';\n        window.location.reload();\n    }\n}\n\nconst paperStyles = {\n    backgroundColor: \"rgba(0,0,0, 0)\",\n    borderRadius: \"20px\",\n    padding: \"10px\",\n    width: \"150px\",\n    textAlign: \"center\",\n    height: \"175px\"\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  }));\n\n//   this is the basic syntax thing, from the res that you're console logging, we can add .age or whatever for that particular value\n// getRandom().then((res) => console.log(res))\n\nfunction WeightLog(){\n    const classes = useStyles();\n    const {store, dispatch} = useGlobalState();\n    const {random} = store\n\n    const initialRandomState = [\n        {\n        username: 'username', \n        goal_weight: 'goal_weight',\n        weight: 'weight',\n        age: 'age'\n    },\n    {\n        username: 'username', \n        goal_weight: 'goal_weight',\n        weight: 'weight',\n        age: 'age'\n    },\n    {\n        username: 'username', \n        goal_weight: 'goal_weight',\n        weight: 'weight',\n        age: 'age'\n    },\n    {\n        username: 'username', \n        goal_weight: 'goal_weight',\n        weight: 'weight',\n        age: 'age'\n    },\n    {\n        username: 'username', \n        goal_weight: 'goal_weight',\n        weight: 'weight',\n        age: 'age'\n    }\n    ]\n\n    const [randomUser, setRandomUser] = useState(initialRandomState)\n\n//     useEffect(() => {\n//     getRandom()\n//     .then((data) => {\n//     sessionStorage.setItem('random', data[0])\n//     dispatch({type: 'addRandom', data: data[0]})\n//     console.log('weightlog.data: ', data)\n//     // dispatch({type: 'addRandom', data: data[0]})\n//     // console.log('weightlog.data: ' , data)\n// })\n//     // console.log('weightlog.data:', data[0])})\n//     .catch((error) => console.log(error))\n//     },[])\n    \n    useEffect(() => {\n        setRandomUser(random)\n    },[random])\n    // .then(() => {console.log('weightlog.random:', random.username)\n    console.log('weightlog.random: ', random);\n\n    return(\n        <div>\n        <Grid\n            container\n            direction=\"row\"\n            justify=\"space-evenly\"\n            alignItems=\"center\">\n            <Paper elevation={3}\n            style={paperStyles}>\n                User: {randomUser[0].username}\n                <br/>\n                <br/>\n                Goal: {randomUser[0].goal_weight} Kg\n                <br/>\n                <br/>\n                Current: {randomUser[0].weight} Kg\n                <br/>\n                <br/>\n                Age: {randomUser[0].age}\n            </Paper>\n\n\n            <Paper elevation={3}\n            style={paperStyles}>\n                User: {randomUser[1].username}\n                <br/>\n                <br/>\n                Goal: {randomUser[1].goal_weight} Kg\n                <br/>\n                <br/>\n                Current: {randomUser[1].weight} Kg\n                <br/>\n                <br/>\n                Age: {randomUser[1].age}\n            </Paper>\n            <Paper elevation={3}\n            style={paperStyles}>\n                User: {randomUser[2].username}\n                <br/>\n                <br/>\n                Goal: {randomUser[2].goal_weight} Kg\n                <br/>\n                <br/>\n                Current: {randomUser[2].weight} Kg\n                <br/>\n                <br/>\n                Age: {randomUser[2].age}\n            </Paper>\n            <Paper elevation={3}\n            style={paperStyles}>\n                User: {randomUser[3].username}\n                <br/>\n                <br/>\n                Goal: {randomUser[3].goal_weight} Kg\n                <br/>\n                <br/>\n                Current: {randomUser[3].weight} Kg\n                <br/>\n                <br/>\n                Age: {randomUser[3].age}\n            </Paper>\n            <Paper elevation={3}\n            style={paperStyles}>\n                User: {randomUser[4].username}\n                <br/>\n                <br/>\n                Goal: {randomUser[4].goal_weight} Kg\n                <br/>\n                <br/>\n                Current: {randomUser[4].weight} Kg\n                <br/>\n                <br/>\n                Age: {randomUser[4].age}\n            </Paper>\n        </Grid>\n        </div>\n    )\n};\n\nexport default WeightLog;","/Users/marcnguyen/Documents/heartline-react/src/components/SignIn.js",[],["69","70"],"/Users/marcnguyen/Documents/heartline-react/src/components/Progess.js",[],"/Users/marcnguyen/Documents/heartline-react/src/config/api.js",[],"/Users/marcnguyen/Documents/heartline-react/src/utils/stateReducer.js",[],{"ruleId":"71","severity":1,"message":"72","line":48,"column":5,"nodeType":"73","endLine":48,"endColumn":24,"suggestions":"74"},{"ruleId":"71","severity":1,"message":"75","line":55,"column":5,"nodeType":"73","endLine":55,"endColumn":63,"suggestions":"76"},{"ruleId":"77","severity":1,"message":"78","line":57,"column":8,"nodeType":"79","messageId":"80","endLine":57,"endColumn":14},{"ruleId":"71","severity":1,"message":"81","line":50,"column":5,"nodeType":"73","endLine":50,"endColumn":19,"suggestions":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"83","replacedBy":"87"},{"ruleId":"85","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":25,"column":5,"nodeType":"91","messageId":"92","endLine":25,"endColumn":36},{"ruleId":"93","severity":2,"message":"94","line":31,"column":1,"nodeType":"95","messageId":"96","endLine":31,"endColumn":13},{"ruleId":"77","severity":1,"message":"97","line":42,"column":11,"nodeType":"79","messageId":"80","endLine":42,"endColumn":18},{"ruleId":"77","severity":1,"message":"98","line":43,"column":19,"nodeType":"79","messageId":"80","endLine":43,"endColumn":27},{"ruleId":"83","replacedBy":"99"},{"ruleId":"85","replacedBy":"100"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'homeUser.goal_weight' and 'homeUser.weight'. Either include them or remove the dependency array.","ArrayExpression",["101"],"React Hook useEffect has missing dependencies: 'dispatch' and 'homeUser'. Either include them or remove the dependency array.",["102"],"no-unused-vars","'health' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["103"],"no-native-reassign",["104"],"no-negated-in-lhs",["105"],["104"],["105"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","'classes' is assigned a value but never used.","'dispatch' is assigned a value but never used.",["104"],["105"],{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [calculateCalories, homeUser.goal_weight, homeUser.weight]",{"range":"112","text":"113"},"Update the dependencies array to be: [dispatch, homeUser, homeUser.calories, homeUser.water_count, homeUser.weight]",{"range":"114","text":"115"},"Update the dependencies array to be: [loggedInUser, user]",{"range":"116","text":"117"},[1438,1457],"[calculateCalories, homeUser.goal_weight, homeUser.weight]",[1598,1656],"[dispatch, homeUser, homeUser.calories, homeUser.water_count, homeUser.weight]",[1567,1581],"[loggedInUser, user]"]