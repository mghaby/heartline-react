[{"/Users/mghaby/Desktop/react/heartline-react/src/reportWebVitals.js":"1","/Users/mghaby/Desktop/react/heartline-react/src/services/userServices.js":"2","/Users/mghaby/Desktop/react/heartline-react/src/utils/stateReducer.js":"3","/Users/mghaby/Desktop/react/heartline-react/src/components/Home.js":"4","/Users/mghaby/Desktop/react/heartline-react/src/components/WeightLog.js":"5","/Users/mghaby/Desktop/react/heartline-react/src/config/api.js":"6","/Users/mghaby/Desktop/react/heartline-react/src/components/SignIn.js":"7","/Users/mghaby/Desktop/react/heartline-react/src/components/Settings.js":"8","/Users/mghaby/Desktop/react/heartline-react/src/components/SignUp.js":"9","/Users/mghaby/Desktop/react/heartline-react/src/App.js":"10","/Users/mghaby/Desktop/react/heartline-react/src/components/Slider.js":"11","/Users/mghaby/Desktop/react/heartline-react/src/components/Button_Form.js":"12","/Users/mghaby/Desktop/react/heartline-react/src/components/Landing.js":"13","/Users/mghaby/Desktop/react/heartline-react/src/components/BMI.js":"14"},{"size":362,"mtime":1612868943595,"results":"15","hashOfConfig":"16"},{"size":2152,"mtime":1612871948965,"results":"17","hashOfConfig":"16"},{"size":1741,"mtime":1612876024322,"results":"18","hashOfConfig":"16"},{"size":2941,"mtime":1612875202863,"results":"19","hashOfConfig":"16"},{"size":3213,"mtime":1612872194551,"results":"20","hashOfConfig":"16"},{"size":333,"mtime":1612868943594,"results":"21","hashOfConfig":"16"},{"size":2364,"mtime":1612876332218,"results":"22","hashOfConfig":"16"},{"size":5160,"mtime":1612868943593,"results":"23","hashOfConfig":"16"},{"size":5792,"mtime":1612876859719,"results":"24","hashOfConfig":"16"},{"size":1558,"mtime":1612875700296,"results":"25","hashOfConfig":"16"},{"size":1965,"mtime":1612868943594,"results":"26","hashOfConfig":"16"},{"size":2985,"mtime":1612868943592,"results":"27","hashOfConfig":"16"},{"size":526,"mtime":1612868943592,"results":"28","hashOfConfig":"16"},{"size":1371,"mtime":1612868943592,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cx68wn",{"filePath":"32","messages":"33","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mghaby/Desktop/react/heartline-react/src/reportWebVitals.js",[],"/Users/mghaby/Desktop/react/heartline-react/src/services/userServices.js",["64","65","66","67","68"],"import heartLineApi from '../config/api'\nimport axios from 'axios';\n\n// create user\nexport async function signUp(data) {\n    const response = await heartLineApi.post('/api/users/', data)\n    return response.data\n}\n\n// random call for users with public = true\nexport async function getRandom(){\n    // const response = await heartLineApi.get('/api/users/random')\n    // return response.data\n    \n    let one = \"http://localhost:3000/api/users/random\"\n    let two = \"http://localhost:3000/api/users/random\"\n    let three = \"http://localhost:3000/api/users/random\"\n    let four = \"http://localhost:3000/api/users/random\"\n    let five = \"http://localhost:3000/api/users/random\"\n\n    const requestOne = axios.get(one);\n    const requestTwo = axios.get(two);\n    const requestThree = axios.get(three);\n    const requestFour = axios.get(four);\n    const requestFive = axios.get(five);\n\n    axios.all([requestOne, requestTwo, requestThree, requestFour, requestFive])\n    .then(axios.spread((...responses) => {\n    const responseOne = responses[0]\n    const responseTwo = responses[1]\n    const responseThree = responses[2]\n    const responseFour = responses[3]\n    const responseFive = responses[4]\n    console.log(responses)\n}))\n.catch(errors => {\n  console.log(errors)\n});\n\n\n\n};\n\n// show user with id\n// might need to change to username instead of id\nexport async function getUser(id) {\n    const response = await heartLineApi.get(`/api/users/${id}`)\n    return response.data\n};\n\n// update user settings\n    export async function updateUser(user){\n        const response = await heartLineApi.put(`/api/users/${user.id}`, user)\n        return response.data\n    }\n\n\n// destroy user \nexport async function deleteUser(id){\n    const response = await heartLineApi.delete(`/api/users/${id}`)\n    return response.data\n\n}\n\n//logout user \nexport async function signOut(data) {\n    sessionStorage.clear()\n    return \"Logged out\"\n};\n\n// user sign in \nexport async function signIn(data) {\n    const response = await heartLineApi.post('/api/users/sign_in', data)\n    return response.data\n}\n\n\n// default thing\nexport default async function defExp(e){\n    console.log(e)\n};",["69","70"],"/Users/mghaby/Desktop/react/heartline-react/src/utils/stateReducer.js",[],"/Users/mghaby/Desktop/react/heartline-react/src/components/Home.js",["71","72","73","74","75"],"import React, {useEffect, useState} from 'react';\nimport BMI from './BMI'\nimport Progress from './Progess'\nimport FormDialog from './Button_Form'\nimport AddSharpIcon from '@material-ui/icons/AddSharp';\nimport RemoveSharpIcon from '@material-ui/icons/RemoveSharp';\nimport {getUser, updateUser} from '../services/userServices'\nimport {useGlobalState} from '../utils/stateContext'\n\nfunction Home() {\n\tconst {store, dispatch} = useGlobalState()\n\tconst {user, loggedInUser} = store\n\tconsole.log('Home.user: ', user)\n\t// const {weight, goal_weight, height, age, activity_level, mf, calories, water, water_count} = user\n\t// console.log('Home.user.weight: ', user.weight, \n\t// \t'Home.user.goal_weight: ', user.goal_weight,\n\t// \t'Home.user.height: ', user.height,\n\t// \t'Home.user.age: ', user.age,\n\t// \t'Home.user.activity_level: ', user.activity_level,\n\t// \t'Home.user.mf: ', user.mf)\n\n\tconst [bmi, setBMI] = useState(21)\n\n\tconst baseValue = (((10*(user.weight) + 6.25*(user.height) - 5*(user.age) +5) * user.activity_level)*user.mf)\n  \n\tconst totalCalories = (user.goal_weight>user.weight) ? baseValue*1.11 : baseValue*0.89\n\n\tconst health = [\n\t\t{SevereThinness: '<16'},\n\t\t{ModerateThinness: '16 - 17'},\n\t\t{MildThinness: '17 - 18.5'},\n\t\t{Normal: '18.5 - 25'},\n\t\t{Overweight: '25 - 30'},\n\t\t{ObeseClassI: '30 - 35'},\n\t\t{ObeseClassII: '35 - 40'},\n\t\t{ObeseClassIII: '>40'}\n\t]\n\n\tfunction addCalories(calories){\n\t\tdispatch({type: 'addCalories', data: calories})\n\t}\n\n\tfunction subtractCalories(calories){\n\t\tdispatch({type: 'subtractCalories', data: calories})\n\t}\n\tfunction addWater(water){\n\t\tdispatch({type: 'addWater', data: water})\n\t}\n\tfunction subtractWater(water){\n\t\tdispatch({type: 'subtractWater', data: water})\n\t}\n\tfunction updateWeight(weight){\n\t\tdispatch({type: 'updateWeight', data: weight})\n\t}\n\n\t// useEffect(() => {\n\t// \tupdateUser( {id: formState.id, ...formState})\n\t// \t.then((data) => {\n\t// \t  dispatch({type: 'setUser', data: data})\n\t// \t})\n\t// },[user])\n\n\tuseEffect(() => {\n        getUser(loggedInUser)\n        .then((user) => dispatch({type: 'setUser', data: user}))\n        .catch((error) => console.log(error));\n    console.log('app.user: ', user)\n    console.log('app.loggedInUser: ', loggedInUser)\n    },[loggedInUser])\n\n    return (\n      <div>\n\t\t<div style={{width:200}}><Progress value={user.calories} total={totalCalories}/></div>\n\t\t<FormDialog value={AddSharpIcon} operator={addCalories} /> \n        <FormDialog value={RemoveSharpIcon} operator={subtractCalories} />\n\t\t<p>{`${user.calories} / ${totalCalories}`}</p>\n\t\t<div style={{width:200}}><Progress value={user.water_count} total={user.water}/></div>\n\t\t<FormDialog value={AddSharpIcon} operator={addWater}/> \n        <FormDialog value={RemoveSharpIcon} operator={subtractWater} />\n\t\t<p>{`${user.water_count} / ${user.water}`}</p>\n\t\t<BMI />\n\t\t{user.weight}\n\t\t<FormDialog value={AddSharpIcon} operator={updateWeight}/> \n      </div>\n    \t);\n  }\n  \n  \n  export default Home;\n  ","/Users/mghaby/Desktop/react/heartline-react/src/components/WeightLog.js",["76","77"],"import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport {useGlobalState} from '../utils/stateContext'\nimport {getRandom} from '../services/userServices'\n\n// make all text in here black/grey\n\n\nconst paperStyles = {\n    backgroundColor: \"rgba(0,0,0, 0)\",\n    borderRadius: \"20px\",\n    padding: \"10px\",\n    width: \"150px\",\n    textAlign: \"center\",\n    height: \"175px\"\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  }));\n\n//   this is the basic syntax thing, from the res that you're console logging, we can add .age or whatever for that particular value\n// getRandom().then((res) => console.log(res))\n\nfunction WeightLog(){\n    const classes = useStyles();\n    const {store, dispatch} = useGlobalState();\n    const {random} = store\n\n    useEffect(() => {\n        getRandom()\n    .then((data) => {\n      dispatch({type: 'addRandom', data: data})\n    }).then(() => {\n        console.log('weightlog.random:', random.username)\n    }).catch((error) => console.log(error))\n    },[])\n    \n    return(\n        <div>\n        <Grid\n            container\n            direction=\"row\"\n            justify=\"space-evenly\"\n            alignItems=\"center\">\n            <Paper elevation={3}\n            style={paperStyles}>\n                Username: {random[0].username}\n                <br/>\n                <br/>\n                Goal Weight: \n                <br/>\n                <br/>\n                Current Weight:\n                <br/>\n                <br/>\n                Age:\n            </Paper>\n            <Paper elevation={3}\n            style={paperStyles}>\n                Username: {random[1].username}\n                <br/>\n                <br/>\n                Goal Weight:\n                <br/>\n                <br/>\n                Current Weight:\n                <br/>\n                <br/>\n                Age:\n            </Paper>\n            <Paper elevation={3}\n            style={paperStyles}>\n                Username:\n                <br/>\n                <br/>\n                Goal Weight:\n                <br/>\n                <br/>\n                Current Weight:\n                <br/>\n                <br/>\n                Age:\n            </Paper>\n            <Paper elevation={3}\n            style={paperStyles}>\n                Username:\n                <br/>\n                <br/>\n                Goal Weight:\n                <br/>\n                <br/>\n                Current Weight:\n                <br/>\n                <br/>\n                Age:\n            </Paper>\n            <Paper elevation={3}\n            style={paperStyles}>\n                Username:\n                <br/>\n                <br/>\n                Goal Weight:\n                <br/>\n                <br/>\n                Current Weight:\n                <br/>\n                <br/>\n                Age:\n            </Paper>\n        </Grid>\n        <button>testing</button>\n        </div>\n    )\n};\n\nexport default WeightLog;","/Users/mghaby/Desktop/react/heartline-react/src/config/api.js",[],"/Users/mghaby/Desktop/react/heartline-react/src/components/SignIn.js",[],"/Users/mghaby/Desktop/react/heartline-react/src/components/Settings.js",["78"],"import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport InputSlider from './Slider'\nimport RadioButtonsGroup from './Radio'\nimport NativeSelects from './Select'\nimport {updateUser} from '../services/userServices'\nimport {useGlobalState} from '../utils/stateContext'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst genders =  [\n  {\n    value: '5',\n    label: 'Male'\n  },\n  {\n    value: '-161',\n    label: 'Female'\n  }\n]\nconst social = [\n  {\n    value: 'false',\n    label: \"Private\",\n  },\n  {\n    value: 'true',\n    label: \"Public\",\n  }\n];\n\nconst levels = [\n  {\n    value: '1.2',\n    label: \"Sedentary: Little or no excersise\",\n  },\n  {\n    value: '1.375',\n    label: \"Light: Exercise 1-3 times/week\",\n  },\n  {\n    value: '1.465',\n    label: \"Moderate: Exercise or intense 4-5 times/week\",\n  },\n  {\n    value: '1.55',\n    label: \"Active: Daily exercise or intense exercise 3-4 times/week\",\n  },\n  {\n    value: '1.725',\n    label: \"Very Active: Intense exercise 6-7 times/week\",\n  },\n  {\n    value: '1.9',\n    label: \"Extra Active: Very intense exercise daily, or phyiscal job\",\n  },\n  {\n    value: '1.95',\n    label: \"Athlete\",\n  }\n]\n\nexport default function Settings() {\n  const {store, dispatch} = useGlobalState()\n\tconst {user} = store\n\n  console.log('settings:', user)\n  // const initialFormState = user\n\n\tconst [formState, setFormState] = useState(user)\n\n  // console.log(initialFormState)\n  console.log('formState', formState)\n  \n  const classes = useStyles();\n\n  function handleOnChange(event) {\n    setFormState({\n      ...formState,\n      [event.target.name]: event.target.value\n    })\n  }\n\n  function handleGraphics(target, value) {\n    const newValue = JSON.parse(value)\n    setFormState({\n      ...formState,\n      [target.name]: newValue\n    })\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault()\n    updateUser( {id: formState.id, ...formState})\n    .then((data) => {\n      dispatch({type: 'setUser', data: data})\n    })\n    console.log(formState)\n  }\n\n  return (\n    <div>\n        <p style={{textAlign: 'left', margin : '10px', color: '#023e8a'}}>Our system uses an algorithim to calculate YOUR needs for YOUR goals! Please input your details below in the metric system.</p>\n    <form>\n      <Grid\n       container\n       direction=\"column\"\n       justify=\"space-evenly\"\n       alignItems=\"center\">\n\n    <h1>My Account </h1>\n\n    <br/>\n\n      <TextField\n          id=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          autoComplete=\"current-password\"\n          variant=\"outlined\"\n          name=\"password\"\n          value={formState.password}\n          onChange={handleOnChange}/>\n\n      <br/>\n\n      {/* <TextField\n          id=\"passwordConfirm\"\n          label=\"Password Confirmation\"\n          type=\"password\"\n          autoComplete=\"current-password\"\n          variant=\"outlined\"\n          name=\"password_confirmation\"\n          value={formState.password_confirmation}\n          onChange={handleOnChange}/>\n\n      <br/> */}\n\n      <h1>About Me</h1>\n\n      <br/>\n\n      <InputSlider\n      initialValue={formState.weight} \n      handleGraphics={handleGraphics} \n      name={'weight'} \n      label={'Weight'} \n      max={450} \n      min={1}/>\n\n      <br/>\n\n      <InputSlider\n      initialValue={formState.height} \n      handleGraphics={handleGraphics} \n      name={'height'} \n      label={'Height'} \n      max={280} \n      min={50}/> \n\n      <br/>\n\n      <InputSlider \n      initialValue={formState.age} \n      handleGraphics={handleGraphics} \n      name={'age'} \n      label={'Age'} \n      max={80} \n      min={15}/>\n\n      <br/>\n\n      <RadioButtonsGroup \n      initialValue={formState.mf.toString()} \n      handleGraphics={handleGraphics} \n      name={'mf'} \n      buttons={genders}/>\n\n      <br/>\n\n      <NativeSelects\n      initialValue={formState.activity_level} \n      levels={levels} name={'activity_level'} \n      handleGraphics={handleGraphics}/>\n\n      <br/>\n\n      <h1>My Goals</h1>\n\n      <br/>\n\n      <InputSlider \n      initialValue={formState.goal_weight} \n      handleGraphics={handleGraphics} \n      name={'goal_weight'} \n      label={'Weight'} \n      max={280} \n      min={50}/>\n\n      <br/>\n\n      <InputSlider \n      initialValue={formState.water} \n      handleGraphics={handleGraphics} \n      name={'water'} \n      label={'Water'} \n      max={4000} \n      min={250}/>\n\n      <br/>\n\n      <RadioButtonsGroup \n      initialValue={formState.public.toString()} \n      handleGraphics={handleGraphics} \n      name={'public'} \n      buttons={social}/>\n\n      <br/>\n\n      <Button\n        variant=\"contained\" \n        size=\"large\" color=\"primary\" \n        className={classes.margin} \n        onClick={handleSubmit}>\n        Submit\n      </Button>\n\n        </Grid>\n  </form>\n  </div>\n  );\n  }\n",["79","80"],"/Users/mghaby/Desktop/react/heartline-react/src/components/SignUp.js",[],"/Users/mghaby/Desktop/react/heartline-react/src/App.js",["81"],"/Users/mghaby/Desktop/react/heartline-react/src/components/Slider.js",["82","83"],"/Users/mghaby/Desktop/react/heartline-react/src/components/Button_Form.js",["84","85","86"],"/Users/mghaby/Desktop/react/heartline-react/src/components/Landing.js",[],"/Users/mghaby/Desktop/react/heartline-react/src/components/BMI.js",[],{"ruleId":"87","severity":1,"message":"88","line":29,"column":11,"nodeType":"89","messageId":"90","endLine":29,"endColumn":22},{"ruleId":"87","severity":1,"message":"91","line":30,"column":11,"nodeType":"89","messageId":"90","endLine":30,"endColumn":22},{"ruleId":"87","severity":1,"message":"92","line":31,"column":11,"nodeType":"89","messageId":"90","endLine":31,"endColumn":24},{"ruleId":"87","severity":1,"message":"93","line":32,"column":11,"nodeType":"89","messageId":"90","endLine":32,"endColumn":23},{"ruleId":"87","severity":1,"message":"94","line":33,"column":11,"nodeType":"89","messageId":"90","endLine":33,"endColumn":23},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"87","severity":1,"message":"99","line":7,"column":18,"nodeType":"89","messageId":"90","endLine":7,"endColumn":28},{"ruleId":"87","severity":1,"message":"100","line":22,"column":9,"nodeType":"89","messageId":"90","endLine":22,"endColumn":12},{"ruleId":"87","severity":1,"message":"101","line":22,"column":14,"nodeType":"89","messageId":"90","endLine":22,"endColumn":20},{"ruleId":"87","severity":1,"message":"102","line":28,"column":8,"nodeType":"89","messageId":"90","endLine":28,"endColumn":14},{"ruleId":"103","severity":1,"message":"104","line":69,"column":7,"nodeType":"105","endLine":69,"endColumn":21,"suggestions":"106"},{"ruleId":"87","severity":1,"message":"107","line":35,"column":11,"nodeType":"89","messageId":"90","endLine":35,"endColumn":18},{"ruleId":"103","severity":1,"message":"108","line":46,"column":7,"nodeType":"105","endLine":46,"endColumn":9,"suggestions":"109"},{"ruleId":"87","severity":1,"message":"110","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":26},{"ruleId":"95","replacedBy":"111"},{"ruleId":"97","replacedBy":"112"},{"ruleId":"103","severity":1,"message":"113","line":31,"column":4,"nodeType":"105","endLine":31,"endColumn":18,"suggestions":"114"},{"ruleId":"103","severity":1,"message":"115","line":21,"column":49,"nodeType":"105","endLine":21,"endColumn":56,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":25,"column":5,"nodeType":"119","messageId":"120","endLine":25,"endColumn":36},{"ruleId":"87","severity":1,"message":"121","line":30,"column":10,"nodeType":"89","messageId":"90","endLine":30,"endColumn":15},{"ruleId":"87","severity":1,"message":"122","line":30,"column":17,"nodeType":"89","messageId":"90","endLine":30,"endColumn":25},{"ruleId":"123","severity":1,"message":"124","line":104,"column":39,"nodeType":"125","messageId":"126","endLine":104,"endColumn":40},"no-unused-vars","'responseOne' is assigned a value but never used.","Identifier","unusedVar","'responseTwo' is assigned a value but never used.","'responseThree' is assigned a value but never used.","'responseFour' is assigned a value but never used.","'responseFive' is assigned a value but never used.","no-native-reassign",["127"],"no-negated-in-lhs",["128"],"'updateUser' is defined but never used.","'bmi' is assigned a value but never used.","'setBMI' is assigned a value but never used.","'health' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'user'. Either include them or remove the dependency array.","ArrayExpression",["129"],"'classes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'random.username'. Either include them or remove the dependency array.",["130"],"'useEffect' is defined but never used.",["127"],["128"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["131"],"React Hook useEffect has missing dependencies: 'handleGraphics' and 'name'. Either include them or remove the dependency array. If 'handleGraphics' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["132"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'store' is assigned a value but never used.","'dispatch' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},"Update the dependencies array to be: [dispatch, loggedInUser, user]",{"range":"141","text":"142"},"Update the dependencies array to be: [dispatch, random.username]",{"range":"143","text":"144"},"Update the dependencies array to be: [loggedInUser, user]",{"range":"145","text":"146"},"Update the dependencies array to be: [handleGraphics, name, value]",{"range":"147","text":"148"},[2212,2226],"[dispatch, loggedInUser, user]",[1269,1271],"[dispatch, random.username]",[1084,1098],"[loggedInUser, user]",[619,626],"[handleGraphics, name, value]"]